﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MLModel1_ConsoleApp1
{
    public partial class MLModel1
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(@"Index", @"Index")      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"User Id",outputColumnName:@"User Id"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"First Name",outputColumnName:@"First Name"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Last Name",outputColumnName:@"Last Name"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Email",outputColumnName:@"Email"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Phone",outputColumnName:@"Phone"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Date of birth",outputColumnName:@"Date of birth"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Job Title",outputColumnName:@"Job Title"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Index",@"User Id",@"First Name",@"Last Name",@"Email",@"Phone",@"Date of birth",@"Job Title"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"Sex",inputColumnName:@"Sex"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastForest(new FastForestBinaryTrainer.Options(){NumberOfTrees=4,NumberOfLeaves=4,FeatureFraction=1F,LabelColumnName=@"Sex",FeatureColumnName=@"Features"}),labelColumnName:@"Sex"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
